/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as TripsIndexImport } from './routes/trips/index'
import { Route as SignInIndexImport } from './routes/sign-in/index'
import { Route as RegisterIndexImport } from './routes/register/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as PasswordResetIndexImport } from './routes/password-reset/index'
import { Route as PacksIndexImport } from './routes/packs/index'
import { Route as MapsIndexImport } from './routes/maps/index'
import { Route as MapIndexImport } from './routes/map/index'
import { Route as ItemsIndexImport } from './routes/items/index'
import { Route as FeedIndexImport } from './routes/feed/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as AppearanceIndexImport } from './routes/appearance/index'
import { Route as AboutIndexImport } from './routes/about/index'
import { Route as TripCreateImport } from './routes/trip/create'
import { Route as TripTripIdImport } from './routes/trip/$tripId'
import { Route as ProfileIdImport } from './routes/profile/$id'
import { Route as PackCreateImport } from './routes/pack/create'
import { Route as PackIdImport } from './routes/pack/$id'
import { Route as DestinationdestinationIdImport } from './routes/destination/[destinationId]'
import { Route as ProfileSettingsIndexImport } from './routes/profile/settings/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TripsIndexRoute = TripsIndexImport.update({
  path: '/trips/',
  getParentRoute: () => rootRoute,
} as any)

const SignInIndexRoute = SignInIndexImport.update({
  path: '/sign-in/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterIndexRoute = RegisterIndexImport.update({
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const PasswordResetIndexRoute = PasswordResetIndexImport.update({
  path: '/password-reset/',
  getParentRoute: () => rootRoute,
} as any)

const PacksIndexRoute = PacksIndexImport.update({
  path: '/packs/',
  getParentRoute: () => rootRoute,
} as any)

const MapsIndexRoute = MapsIndexImport.update({
  path: '/maps/',
  getParentRoute: () => rootRoute,
} as any)

const MapIndexRoute = MapIndexImport.update({
  path: '/map/',
  getParentRoute: () => rootRoute,
} as any)

const ItemsIndexRoute = ItemsIndexImport.update({
  path: '/items/',
  getParentRoute: () => rootRoute,
} as any)

const FeedIndexRoute = FeedIndexImport.update({
  path: '/feed/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const AppearanceIndexRoute = AppearanceIndexImport.update({
  path: '/appearance/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

const TripCreateRoute = TripCreateImport.update({
  path: '/trip/create',
  getParentRoute: () => rootRoute,
} as any)

const TripTripIdRoute = TripTripIdImport.update({
  path: '/trip/$tripId',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIdRoute = ProfileIdImport.update({
  path: '/profile/$id',
  getParentRoute: () => rootRoute,
} as any)

const PackCreateRoute = PackCreateImport.update({
  path: '/pack/create',
  getParentRoute: () => rootRoute,
} as any)

const PackIdRoute = PackIdImport.update({
  path: '/pack/$id',
  getParentRoute: () => rootRoute,
} as any)

const DestinationdestinationIdRoute = DestinationdestinationIdImport.update({
  path: '/destination/[destinationId]',
  getParentRoute: () => rootRoute,
} as any)

const ProfileSettingsIndexRoute = ProfileSettingsIndexImport.update({
  path: '/profile/settings/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/destination/[destinationId]': {
      preLoaderRoute: typeof DestinationdestinationIdImport
      parentRoute: typeof rootRoute
    }
    '/pack/$id': {
      preLoaderRoute: typeof PackIdImport
      parentRoute: typeof rootRoute
    }
    '/pack/create': {
      preLoaderRoute: typeof PackCreateImport
      parentRoute: typeof rootRoute
    }
    '/profile/$id': {
      preLoaderRoute: typeof ProfileIdImport
      parentRoute: typeof rootRoute
    }
    '/trip/$tripId': {
      preLoaderRoute: typeof TripTripIdImport
      parentRoute: typeof rootRoute
    }
    '/trip/create': {
      preLoaderRoute: typeof TripCreateImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/appearance/': {
      preLoaderRoute: typeof AppearanceIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/feed/': {
      preLoaderRoute: typeof FeedIndexImport
      parentRoute: typeof rootRoute
    }
    '/items/': {
      preLoaderRoute: typeof ItemsIndexImport
      parentRoute: typeof rootRoute
    }
    '/map/': {
      preLoaderRoute: typeof MapIndexImport
      parentRoute: typeof rootRoute
    }
    '/maps/': {
      preLoaderRoute: typeof MapsIndexImport
      parentRoute: typeof rootRoute
    }
    '/packs/': {
      preLoaderRoute: typeof PacksIndexImport
      parentRoute: typeof rootRoute
    }
    '/password-reset/': {
      preLoaderRoute: typeof PasswordResetIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/sign-in/': {
      preLoaderRoute: typeof SignInIndexImport
      parentRoute: typeof rootRoute
    }
    '/trips/': {
      preLoaderRoute: typeof TripsIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/settings/': {
      preLoaderRoute: typeof ProfileSettingsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  DestinationdestinationIdRoute,
  PackIdRoute,
  PackCreateRoute,
  ProfileIdRoute,
  TripTripIdRoute,
  TripCreateRoute,
  AboutIndexRoute,
  AppearanceIndexRoute,
  DashboardIndexRoute,
  FeedIndexRoute,
  ItemsIndexRoute,
  MapIndexRoute,
  MapsIndexRoute,
  PacksIndexRoute,
  PasswordResetIndexRoute,
  ProfileIndexRoute,
  RegisterIndexRoute,
  SignInIndexRoute,
  TripsIndexRoute,
  ProfileSettingsIndexRoute,
])

/* prettier-ignore-end */
